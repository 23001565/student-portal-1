npm run dev
Start everything with Docker (your backend, frontend, database, etc.)


npm run frontend
Run frontend dev server only (without Docker)

npm run stop
Stop everything

npm run backend
Run backend dev server (without Docker)

>>>> Typical workflow:

Change schema.prisma (add/modify models or fields)

Run prisma migrate dev â†’ applies changes to DB and generates client

Use the updated Prisma Client in your code

If you only change something that doesnâ€™t affect the DB but requires updating the client, you can just run prisma generate.

npx prisma generate


npx prisma migrate dev --name add-archive-fields

npx prisma migrate dev --name add-canceledAt-to-enrollment



>>>>>>>>>>>>>>>>
Add archivedAt only if the table contains data that:

- Has a "completed" or "historical" state (e.g., after a semester ends)

- Should no longer be edited

- Should be hidden from active user-facing workflows

- May be needed for reporting or history later

Only add archivedAt to models where a clear transition from "active" to "historical" happens (like Class, Enrollment).
ðŸ”¸ Avoid adding it to static, config, or reference tables (like Course, Student, Department).
ðŸ”¸ Use status, deletedAt, isActive, or expiresAt for other use cases.